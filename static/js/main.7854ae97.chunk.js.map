{"version":3,"sources":["components/HeaderDetails/HeaderDetails.js","components/HeaderNav/HeaderNav.js","components/AppHeader/AppHeader.js","components/MainNewTask/MainNewTask.js","components/MainTaskListItem/MainTaskListItem.js","components/MainTaskList/MainTaskList.js","components/MainCompletedTaskListItem/MainCompletedTaskListItem.js","components/MainCompletedTaskList/MainCompletedTaskList.js","components/AppMain/AppMain.js","App.js","serviceWorker.js","index.js"],"names":["HeaderDetails","currentDate","format","Date","activeTasks","this","props","className","Component","HeaderNav","to","AppHeader","tab","setTab","MainNewTask","state","name","updateState","e","setState","target","value","addTask","tasks","keyCode","type","placeholder","onChange","onKeyDown","keyPress","bind","onClick","MainTaskListItem","task","id","toggleCompleted","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","deleteTask","MainTaskList","map","completed","key","MainCompletedTaskListItem","MainCompletedTaskList","AppMain","exact","path","render","Fragment","App","tabName","trim","Math","floor","random","filter","length","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7854ae97.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { format } from \"date-fns\";\nimport \"./HeaderDetails.css\";\n\nexport class HeaderDetails extends Component {\n  render() {\n    const currentDate = format(new Date(), \"EEEE, LLLL d\");\n    const activeTasks = `${this.props.activeTasks} Active Tasks`;\n\n    return (\n      <div className=\"header-details\">\n        <p className=\"header-details--current-date\">{currentDate}</p>\n        <p className=\"header-details--active-tasks\">{activeTasks}</p>\n      </div>\n    );\n  }\n}\n\nexport default HeaderDetails;\n","import React, { Component } from \"react\";\nimport \"./HeaderNav.css\";\nimport { Link } from \"react-router-dom\";\n\nexport class HeaderNav extends Component {\n  render() {\n    return (\n      <ul className=\"nav-list\">\n        <li className=\"nav-list--item\">\n          <Link className=\"nav-list--link\" to=\"/\">\n            Incomplete Tasks\n          </Link>\n        </li>\n        <li className=\"nav-list--item\">\n          <Link className=\"nav-list--link\" to=\"/completed\">\n            Completed Tasks\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default HeaderNav;\n","import React, { Component } from \"react\";\nimport HeaderDetails from \"../HeaderDetails\";\nimport HeaderNav from \"../HeaderNav\";\nimport \"./AppHeader.css\";\n\nexport class AppHeader extends Component {\n  render() {\n    return (\n      <header className=\"app-header\">\n        <HeaderDetails activeTasks={this.props.activeTasks} />\n        <HeaderNav tab={this.props.tab} setTab={this.props.setTab} />\n      </header>\n    );\n  }\n}\n\nexport default AppHeader;\n","import React, { Component } from \"react\";\nimport \"./MainNewTask.css\";\n\nexport class MainNewTask extends Component {\n  state = {\n    name: \"\",\n  };\n\n  updateState = (e) => this.setState({ name: e.target.value });\n\n  addTask = () => {\n    this.props.addTask(this.props.tasks, this.state.name);\n    this.setState({ name: \"\" });\n  };\n\n  keyPress(e) {\n    if (e.keyCode === 13) {\n      this.addTask();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"new-task\">\n        <input\n          className=\"new-task--text-input\"\n          type=\"text\"\n          placeholder=\"Enter a task...\"\n          value={this.state.name}\n          onChange={this.updateState}\n          onKeyDown={this.keyPress.bind(this)}\n        />\n        <button onClick={this.addTask} className=\"new-task--add-button\">\n          Add Task\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default MainNewTask;\n","import React, { Component } from \"react\";\nimport \"./MainTaskListItem.css\";\n\nexport class MainTaskListItem extends Component {\n  render() {\n    const { id, name } = this.props.task;\n    const tasks = this.props.tasks;\n    return (\n      <li className=\"task-list-item\">\n        <button\n          className=\"task-list-item--mark-complete-button\"\n          onClick={this.props.toggleCompleted.bind(this, tasks, id)}\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M10.2426 16.3137L6 12.071L7.41421 10.6568L10.2426 13.4853L15.8995 7.8284L17.3137 9.24262L10.2426 16.3137Z\"\n              fill=\"currentColor\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12ZM12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </button>\n        <p className=\"task-list-item--task-name\">{name}</p>\n        <button\n          className=\"task-list-item--delete-button\"\n          onClick={this.props.deleteTask.bind(this, tasks, id)}\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M17 5V4C17 2.89543 16.1046 2 15 2H9C7.89543 2 7 2.89543 7 4V5H4C3.44772 5 3 5.44772 3 6C3 6.55228 3.44772 7 4 7H5V18C5 19.6569 6.34315 21 8 21H16C17.6569 21 19 19.6569 19 18V7H20C20.5523 7 21 6.55228 21 6C21 5.44772 20.5523 5 20 5H17ZM15 4H9V5H15V4ZM17 7H7V18C7 18.5523 7.44772 19 8 19H16C16.5523 19 17 18.5523 17 18V7Z\"\n              fill=\"currentColor\"\n            />\n            <path d=\"M9 9H11V17H9V9Z\" fill=\"currentColor\" />\n            <path d=\"M13 9H15V17H13V9Z\" fill=\"currentColor\" />\n          </svg>\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default MainTaskListItem;\n","import React, { Component } from \"react\";\nimport \"./MainTaskList.css\";\nimport MainTaskListItem from \"../MainTaskListItem\";\n\nexport class MainTaskList extends Component {\n  render() {\n    const { tasks } = this.props;\n\n    return (\n      <ul className=\"task-list\">\n        {tasks.map((task) =>\n          task.completed ? null : (\n            <MainTaskListItem\n              task={task}\n              key={task.id}\n              toggleCompleted={this.props.toggleCompleted}\n              deleteTask={this.props.deleteTask}\n              tasks={this.props.tasks}\n            />\n          )\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default MainTaskList;\n","import React, { Component } from \"react\";\nimport \"./MainCompletedTaskListItem.css\";\n\nexport class MainCompletedTaskListItem extends Component {\n  render() {\n    const { id, name } = this.props.task;\n    const tasks = this.props.tasks;\n    return (\n      <li className=\"completed-task-list-item\">\n        <button\n          onClick={this.props.toggleCompleted.bind(this, tasks, id)}\n          className=\"completed-task-list-item--mark-incomplete-button\"\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M5.33929 4.46777H7.33929V7.02487C8.52931 6.08978 10.0299 5.53207 11.6607 5.53207C15.5267 5.53207 18.6607 8.66608 18.6607 12.5321C18.6607 16.3981 15.5267 19.5321 11.6607 19.5321C9.51025 19.5321 7.58625 18.5623 6.30219 17.0363L7.92151 15.8515C8.83741 16.8825 10.1732 17.5321 11.6607 17.5321C14.4222 17.5321 16.6607 15.2935 16.6607 12.5321C16.6607 9.77065 14.4222 7.53207 11.6607 7.53207C10.5739 7.53207 9.56805 7.87884 8.74779 8.46777L11.3393 8.46777V10.4678H5.33929V4.46777Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </button>\n        <p className=\"completed-task-list-item--task-name\">{name}</p>\n        <button\n          onClick={this.props.deleteTask.bind(this, tasks, id)}\n          className=\"completed-task-list-item--delete-button svg\"\n        >\n          <svg className=\"svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path className=\"svg\"\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M17 5V4C17 2.89543 16.1046 2 15 2H9C7.89543 2 7 2.89543 7 4V5H4C3.44772 5 3 5.44772 3 6C3 6.55228 3.44772 7 4 7H5V18C5 19.6569 6.34315 21 8 21H16C17.6569 21 19 19.6569 19 18V7H20C20.5523 7 21 6.55228 21 6C21 5.44772 20.5523 5 20 5H17ZM15 4H9V5H15V4ZM17 7H7V18C7 18.5523 7.44772 19 8 19H16C16.5523 19 17 18.5523 17 18V7Z\"\n              fill=\"currentColor\"\n            />\n            <path className=\"svg\" d=\"M9 9H11V17H9V9Z\" fill=\"currentColor\" />\n            <path className=\"svg\" d=\"M13 9H15V17H13V9Z\" fill=\"currentColor\" />\n          </svg>\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default MainCompletedTaskListItem;\n","import React, { Component } from \"react\";\nimport \"./MainCompletedTaskList.css\";\nimport MainCompletedTaskListItem from \"../MainCompletedTaskListItem\";\n\nexport class MainCompletedTaskList extends Component {\n  render() {\n    const tasks = this.props.tasks;\n    return (\n      <ul className=\"completed-task-list\">\n        {tasks.map((task) =>\n          task.completed ? (\n            <MainCompletedTaskListItem\n              task={task}\n              key={task.id}\n              tasks={this.props.tasks}\n              toggleCompleted={this.props.toggleCompleted}\n              deleteTask={this.props.deleteTask}\n            />\n          ) : null\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default MainCompletedTaskList;\n","import React, { Component } from \"react\";\nimport \"./AppMain.css\";\nimport MainNewTask from \"../MainNewTask\";\nimport MainTaskList from \"../MainTaskList\";\nimport MainCompletedTaskList from \"../MainCompletedTaskList\";\nimport { Route } from \"react-router-dom\";\n\nexport class AppMain extends Component {\n  render() {\n    return (\n      <div className=\"app-main\">\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <React.Fragment>\n              <MainNewTask\n                tasks={this.props.tasks}\n                addTask={this.props.addTask}\n              />\n              <MainTaskList\n                tasks={this.props.tasks}\n                toggleCompleted={this.props.toggleCompleted}\n                deleteTask={this.props.deleteTask}\n              />\n            </React.Fragment>\n          )}\n        />\n        <Route\n          path=\"/completed\"\n          render={(props) => (\n            <React.Fragment>\n              <MainCompletedTaskList\n                tasks={this.props.tasks}\n                toggleCompleted={this.props.toggleCompleted}\n                deleteTask={this.props.deleteTask}\n              />\n            </React.Fragment>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AppMain;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AppHeader from \"./components/AppHeader\";\nimport AppMain from \"./components/AppMain\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: \"incomplete\",\n      tasks: [\n        {\n          id: 1,\n          name: \"Learn React\",\n          completed: false,\n        },\n        {\n          id: 2,\n          name: \"Take a break\",\n          completed: false,\n        },\n        {\n          id: 3,\n          name: \"Make to-do list app\",\n          completed: true,\n        },\n      ],\n    };\n  }\n\n  setTab = (tabName) => {\n    this.setState({\n      tab: tabName,\n    });\n  };\n\n  toggleCompleted = (tasks, id) => {\n    this.setState({\n      tasks: tasks.map((task) => {\n        if (task.id === id) {\n          task.completed = !task.completed;\n        }\n        return task;\n      }),\n    });\n  };\n\n  addTask = (tasks, name) => {\n    if (name !== null && name.trim() !== \"\") {\n      this.setState({\n        tasks: [\n          ...tasks,\n          {\n            id: Math.floor(Math.random() * Math.floor(1000)) + 1,\n            name,\n            completed: false,\n          },\n        ],\n      });\n    }\n  };\n\n  deleteTask = (tasks, id) => {\n    this.setState({\n      tasks: [...tasks.filter((task) => task.id !== id)],\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <AppHeader\n            activeTasks={this.state.tasks.length}\n            tab={this.state.tab}\n            setTab={this.setTab}\n          />\n          <AppMain\n            tasks={this.state.tasks}\n            toggleCompleted={this.toggleCompleted}\n            deleteTask={this.deleteTask}\n            addTask={this.addTask}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}